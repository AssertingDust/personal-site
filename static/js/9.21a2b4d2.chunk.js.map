{"version":3,"sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"names":["Degree","data","className","degree","href","link","school","year","Education","id","map","defaultProps","Job","company","position","daterange","points","point","Experience","job","Course","last","number","title","Courses","courses","sort","a","b","ret","university","course","idx","length","degrees","positions","sections","Resume","Main","description","data-testid","sec","toLowerCase"],"mappings":"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","file":"static/js/9.21a2b4d2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Relevant Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","const courses = [\n  {\n    title: 'Data Science in Practice',\n    number: 'COGS 108',\n    university: 'UCSD',\n  },\n  {\n    title: 'Supervised Machine Learning Algorithms',\n    number: 'COGS 118A',\n    university: 'UCSD',\n  },\n  {\n    title: 'Intro to Machine Learning',\n    number: 'COGS 118B',\n    university: 'UCSD',\n  },\n  {\n    title: 'Design & Analysis of Algorithms',\n    number: 'CSE 101',\n    university: 'UCSD',\n  },\n  {\n    title: 'Mathematics for Algorithms & Systems Analysis',\n    number: 'CSE 101',\n    university: 'UCSD',\n  },\n  {\n    title: 'Intro to Statistical Analysis',\n    number: 'COGS 14B',\n    university: 'UCSD',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'University of California - San Diego',\n    degree: 'B.S. Cognitive Science Spec. Machine Learning & Neural Computation',\n    link: 'https://ucsd.edu',\n    year: 2022,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'UCSD Neurosciences',\n    position: 'Data Analyst',\n    link: 'solincalab.org',\n    daterange: 'November 2021 - Present',\n    points: [\n      'Implement survey regression models (Gaussian or binomial family and logit), using R or Stata',\n      'Create and manage SOL-INCA website, updating with new publications/research',\n      'Collaborate with Wayne State University on data analysis projects',\n    ],\n  },\n  {\n    company: 'Motor Imagery Prediction',\n    position: 'Brain Computer Interfaces at UCSD',\n    link: '',\n    daterange: 'January 2022 - March 2022',\n    points: [\n      'Built ML models in an EEG setup to predict oneâ€™s motor imagery',\n      'Utilized filtering, epoching, CSP, and binary classification for analysis',\n      'Implemented several ML methods (LDA, SVM, and KNN) for accuracy',\n    ],\n  },\n  {\n    company: 'J.O.B.S Lesson Plan',\n    position: 'Design for Development at UCSD',\n    link: '',\n    daterange: 'April 2021 - June 2021',\n    points: [\n      'Led a team to design a lesson plan in collaboration with High Tech Elementary',\n      'Worked closely with clients to develop a catered activity centered around career exploration',\n      'Communicated with both students and teachers to ensure specifications were met',\n    ],\n  },\n  {\n    company: 'Park Popularity Analysis',\n    position: 'Data Science in Practice at UCSD',\n    link: '',\n    daterange: 'October 2020 - December 2022',\n    points: [\n      'Compiled and cleaned datasets of San Diego parks and rec centers utilizing Python for analysis',\n      'Created several graphs to better visualize the data and understand results using rank statistics',\n      'Determined no correlation in the distance between the two affecting the popularity of the park',\n    ],\n  },\n  {\n    company: 'McGillivray Construction',\n    position: 'Seasonal Laborer',\n    link: '',\n    daterange: 'June 2016 - July 2020',\n    points: [\n      'Clean work areas, machines, and equipment to maintain a clean and safe job site',\n      'Prepare job sites to ensure safety and efficiency',\n      'Communicate in large teams in order to finish construction projects in a timely manner',\n    ],\n  },\n];\n\nexport default positions;\n","import React from 'react';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Courses from '../components/Resume/Courses';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n\nconst sections = [\n  'Education',\n  'Courses',\n  'Experience',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Ramsey Cervantes' Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">Resume</h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Courses data={courses} />\n      <Experience data={positions} />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"sourceRoot":""}